cmake_minimum_required(VERSION 3.8)
project(<your_package_name>)   # <-- Replace with your package name

# ---------------------------
# Compiler settings
# ---------------------------
if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# ---------------------------
# Dependencies
# ---------------------------
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)

# Add other dependencies as needed:
# find_package(std_msgs REQUIRED)
# find_package(sensor_msgs REQUIRED)
# find_package(OpenCV REQUIRED)
# find_package(cv_bridge REQUIRED)
# find_package(rosidl_default_generators REQUIRED)  # For custom msg/srv/action

# ---------------------------
# Interfaces (msg/srv/action)  (Optional)
# ---------------------------
# rosidl_generate_interfaces(${PROJECT_NAME}
#   "msg/MyMessage.msg"
#   "srv/MyService.srv"
#   "action/MyAction.action"
#   DEPENDENCIES std_msgs sensor_msgs  # <-- Add message dependencies here
#   ADD_LINTER_TESTS
# )

# rosidl_get_typesupport_target(cpp_typesupport_target "${PROJECT_NAME}" "rosidl_typesupport_cpp")

# ---------------------------
# Executables / Nodes
# ---------------------------
# Example publisher
# add_executable(publisher_node src/publisher_node.cpp)
# ament_target_dependencies(publisher_node rclcpp std_msgs)

# Example subscriber
# add_executable(subscriber_node src/subscriber_node.cpp)
# ament_target_dependencies(subscriber_node rclcpp std_msgs)

# Example service server
# add_executable(service_server src/service_server.cpp)
# ament_target_dependencies(service_server rclcpp std_msgs)
# target_link_libraries(service_server "${cpp_typesupport_target}")  # If using custom srv

# Example service client
# add_executable(service_client src/service_client.cpp)
# ament_target_dependencies(service_client rclcpp std_msgs)
# target_link_libraries(service_client "${cpp_typesupport_target}")  # If using custom srv

# ---------------------------
# Install (executables, launch, etc.)
# ---------------------------
install(TARGETS
  # publisher_node
  # subscriber_node
  # service_server
  # service_client
  DESTINATION lib/${PROJECT_NAME}
)

install(DIRECTORY
  launch
  DESTINATION share/${PROJECT_NAME}/
)

# ---------------------------
# Tests / Linters
# ---------------------------
if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  set(ament_cmake_copyright_FOUND TRUE)
  set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_package()
